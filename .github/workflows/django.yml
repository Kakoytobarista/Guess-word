name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      run: |
        cd backend/guess_word
        python manage.py test tests

    - name: Test with flake8 and django tests
      run: |
        python -m flake8 --ignore E24,W504 --select max-line-length=120

#  build_and_push_to_docker_hub:
#    name: Push Docker image to Docker Hub
#    runs-on: ubuntu-latest
#    needs: tests
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to Docker
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Push to Docker Hub
#        uses: docker/build-push-action@v2
#        with:
#          context: backend/.
#          push: true
#          tags: heyaslan/foodgram:v1.1.3

  deploy:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd Guess-word/infra
            docker-compose stop
            docker system prune -a -f
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} > .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SENTRY_KEY=${{ secrets.SENTRY_KEY }} >> .env
            echo CACHE_ENGINE=${{ secrets.CACHE_ENGINE }} >> .env
            echo CACHE_HOST=${{ secrets.CACHE_HOST }} >> .env
            echo CACHE_CLASS=${{ secrets.CACHE_CLASS }} >> .env
            
            echo SESSION_ENGINE=${{ secrets.SESSION_ENGINE }} >> .env
            echo SESSION_CACHE_ALIAS=${{ secrets.SESSION_CACHE_ALIAS }} >> .env
            echo CACHE_TTL=${{ secrets.CACHE_TTL }} >> .env
            sudo docker-compose build
